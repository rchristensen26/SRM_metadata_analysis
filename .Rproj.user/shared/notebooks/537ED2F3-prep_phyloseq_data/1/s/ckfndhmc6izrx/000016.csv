"0","# Overall, I want to tip_glom the result query tree at approximately the species level. To do that, I'm going to first visualize the reference tree (without any query sequences) and the taxon table for the reference tree. Then, I'm going to approximate the branch length (tip_glom ""h"") that corresponds to the tax_glom at the species level (and genus level too, while I'm at it). Then, I'm going to visualize the result tree using the tip_glom value determined from the previous step, and also label ONLY reference tips (the query labels are just not useful). Off we go!"
"0",""
"0","# ref_tree_file <- ""/Users/rebeccachristensen/Desktop/Cremer_Lab_2022/main/workflow/out/raxmlOutputFinal/RAxML_originalLabelledTree_noBootstrap.newick"""
"0","# ref_tree <- ape::read.tree(ref_tree_file)"
"0","# # plot(ref_tree)"
"0","# "
"0","# # ugh ok. first i gotta root this bad boy"
"0","# out_group = as.vector(archaeaRootsetIDs$X1)"
"0","# "
"0","# rooted_ref_tree <-root(ref_tree, out_group, r = TRUE)"
"0","# # plot(rooted_ref_tree)"
"0","# "
"0","# phy_ref <- phyloseq(rooted_ref_tree)"
"0",""
"0","# plot_tree(phy_ref, label.tips = ""taxa_names"")"
"0",""
"0","# NICE. you did the bare minimum!"
"0","# next: make a taxon table from the FASTA file descriptions for each reference sequence. we're gonna do this in python..."
"0",""
"0","# # format taxa_table!"
"0","# rownames(taxa_table) <- taxa_table$OTU"
"0","# taxa_table <- as.matrix(taxa_table)"
"0","# taxa_table <- taxa_table[,-c(1:2)]"
"0",""
"0","# TAX = tax_table(taxa_table)"
"0",""
"0","# ref_phyloseq <- phyloseq(rooted_ref_tree, TAX)"
"0",""
"0","# umm so phyloseq apparently required an otu table"
"0","# i'm going to make a fake otu table for now just to visualize everything, and then make a real otu table with subject by closest reference sequence to the query sequence"
"0",""
"0","# ref_otu_matrix <- matrix(data = 1, nrow = nrow(taxa_table))"
"0","# rownames(ref_otu_matrix) <- rownames(taxa_table)"
"0","# colnames(ref_otu_matrix) <- c(""sample1"")"
"0","OTU = otu_table(ref_otu_matrix, taxa_are_rows = TRUE)"
"0","ref_phyloseq <- phyloseq(rooted_ref_tree, TAX, OTU)"
"0",""
