"0","# first, let's take a look at the available metadata variables and single out the one's related to subject ID "
"0",""
"0","# View(colnames(dataset21and22))"
"0",""
"0","variables_related_to_subject <- c(""label"","
"0","                                  ""sample name"","
"0","                                  ""unique ID"","
"0","                                  ""host subject id"","
"0","                                  ""description"","
"0","                                  ""Replication #"","
"0","                                  ""Test person"","
"0","                                  ""biospecimen repository"","
"0","                                  ""submitted subject id"","
"0","                                  ""patient_name"","
"0","                                  ""Patient_name"","
"0","                                  ""sample_alias"","
"0","                                  ""ID"","
"0","                                  ""patient"","
"0","                                  ""individual name"","
"0","                                  ""individual"","
"0","                                  ""subject_id"")"
"0",""
"0","for (variable in variables_related_to_subject[17]){"
"0","  View(table(dataset21and22[,variable]))"
"0","}"
"0",""
"0","# check out the samples"
"0","subset(dataset21and22$sample_id, dataset21and22$`subject_id` == ""ERP005989|mother_64"")"
"1","[1]"
"1"," ""SAMEA5849824"""
"1"," ""SAMEA5850585"""
"1"," ""SAMEA5850586"""
"1","
"
"0","# unique ID possibly may be of interest -- need to look in to the studies"
"0","# should be used to identify single subjects:"
"0","subject_variables <- c("
"0","  ""host subject id"","
"0","  ""Test person"","
"0","  ""submitted subject id"","
"0","  ""patient_name"","
"0","  ""Patient_name"","
"0","  ""patient"","
"0","  ""individual name"","
"0","  ""individual"","
"0","  ""subject_id"""
"0",")"
"0",""
"0","# now that we have a list of variables with subject information, we can add those samples to a df with row = subject ID"
"0","# first, let's figure out how many samples have overlapping data for the variables, and decide which variable should have priority when parsing the data"
"0",""
