"0","# 2,513 samples from 2021 are not in 2022"
"0","# expected result from merging: 72,501 rows"
"0",""
"0","# joined <- merge(sample_metadata_2021, sample_metadata_2022, by = ""sample_id"", all = TRUE)"
"0","# "
"0","# View(joined)"
"0","# nrow(joined)"
"0","# ncol(joined)"
"0",""
"0","# ok... so merging by sample_id works"
"0","# next, change the names of the leaf-level OTUs "
"0",""
"0","# try anti-join"
"0","antijoined <- biosample_metadata_2021 %>% anti_join(sample_metadata_2022, by = ""sample_id"")"
"0","nrow(antijoined)"
"1","[1]"
"1"," 2513"
"1","
"
"0","# antijoined is the samples that are only in 2021 and not in 2022"
"0","# new strategy: completely format the antijoined df and then ... just basically append/add these rows to the old df"
"0",""
"0","# joined2 <- merge(antijoined, sample_metadata_2022, by = c(""sample_id"", ""Bilophila_wadsworthia__BilWads6""), all = TRUE)"
"0",""
"0","# sum(antijoined$Bilophila_wadsworthia__BilWads6)"
"0","# sum(sample_metadata_2022$Bilophila_wadsworthia__BilWads6)"
"0","# sum(joined2$Bilophila_wadsworthia__BilWads6)"
"0","# merging by two columns seems to work!"
"0",""
"0","# next: make a vector of all the columns you want to merge by. this includes: sample_id, leaf-level OTUs (that are in common), and country, age, and sex data, if it's the same as the 2022 dataframe. If it's not the same, make sure these variables are specified with ""_2021"" in the column name. We can work on formatting this data in a later step. "
"0","# side note: rename OTUs from 2021 data to match 2022 data!"
"0",""
"0","# first, take a look at all the variable names:"
"0","# write.xlsx(colnames(antijoined), file = ""colNames_2021data.xlsx"")"
"0","# write.xlsx(colnames(sample_metadata_2022), file = ""colNames_2022data.xlsx"")"
"0","# write.xlsx(setdiff(colnames(antijoined), colnames(sample_metadata_2022)), file = ""colNames_in21not22data.xlsx"")"
"0","# write.xlsx(setdiff(colnames(sample_metadata_2022), colnames(antijoined)), file = ""colNames_in22not21data.xlsx"")"
